name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=. --cov-report=xml --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run security scan with bandit
        run: bandit -r . -f json -o bandit-report.json || true

      - name: Check dependencies for vulnerabilities
        run: safety check --json --output safety-report.json || true

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t market-anomaly-detection:latest .

      - name: Test Docker image
        run: |
          docker run --rm -d -p 8501:8501 --name test-container market-anomaly-detection:latest
          sleep 30
          curl -f http://localhost:8501/_stcore/health || exit 1
          docker stop test-container

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        if: github.event_name == 'push'
        run: |
          docker tag market-anomaly-detection:latest ${{ secrets.DOCKER_USERNAME }}/market-anomaly-detection:latest
          docker tag market-anomaly-detection:latest ${{ secrets.DOCKER_USERNAME }}/market-anomaly-detection:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/market-anomaly-detection:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/market-anomaly-detection:${{ github.sha }}
